Array :
       1.Array is a collection of items
       2.Array is a list of items/values
       3.It is used to store multiple values in a single variable
       4.Array is a mutable(modify after creation) data type
       5.Array is a dynamic data type
       6.It can hold values/items like number,string,objects etc...
       7.Is is denoted by []
       8.Array is a ordered collection of items
ex:

              let arr1=[10,20,30,50];
index positions:        0  1  2  3
length -4  
-----------------------------------------------------------------------
Array Creation:
    1.Array literal
    2.Array constructor
    3.Array.from()
    4.Array.of()
1.Array literal:
        let arr1=[10,20,30,50];
2.Array constructor:
        let arr2=new Array(10,20,30,50);
        let arr3=new Array(5);[_,_,_,_,_]
3.Array.from():
        let StringData='hello';
        let charArr=Array.from(StringData);
        -it is used to convert string, sets to array
4.Array.of():
        let numArr=Array.of(10,20,30,50);
        -it is used to create new array from a set of values
--------------------------------------------------------------------
updating/modifying data in array:
       1.Array indexing
       2.Array methods
--------------------------------------------------------------------
acessing data from array:
    1.Array indexing 
    2.Array Methods
--------------------------------------------------------------
Adding elements to an array:
    1.Array indexing 
    2.Array Methods
        1.push()-adds the element at the end
        2.unshift()-adds the element at the begining 
----------------------------------------------------------------
Removing elements from an array:
    1.Array indexing 
    2.Array Methods
        1.pop()-removes element at the end
        2.shift()-removes element at the begining 
----------------------------------------------------------------------
ArrayMethods:

1.at():
------
    -it is used to access an element at a specific index
    -it will accept positive and negative index
------------------------------------------------------------------
2.map():
-------
    -it is used to create a new array by performing a specific operation on each element of an existing array
    -it returns a new array
    -it takes a function as an arguement 
    -it is used to data transferring
    -it is an example of higher order function and introduced in Es5

syntax:
    map(element,index,Array){
        return element;
    }
element:value of an array
index:index of an array(optional)
array: original array(optional)
---------------------------------------------------------------------------
3.filter():
--------
    -it is used to create a new array by keeping the elements of an existing array for which a specific condition is true
    -it returns a new array
    -it wont change the original array
    -it takes a function as an arguement
    -it is an example of higher order function and introduced in Es5
---------------------------------------------------------------------------------------------
4.reduce():
    -it is used to create a new array by keeping the elements of an existing array for which a specific condition is true
    -it returns a single value
    -it wont change the original array
    -it takes a function as an arguement
    -it is an example of higher order function and introduced in Es9
syntax:
 reduce(accumulator,currentvalue,index,array){

 }
 accumulator: it is used to store the result of the previous iteration
 currentvalue: it is used to store the current element of the array
 index:index of an array 
 array :original array
 initial value: it is used to provide a default value for the accumulator(optional but recommened)
 -------------------------------------------------------------------------------------------
 5.includes()
 -------
    -it is used to check if an element is present in an array
    -it returns a boolean 
syntax:

array.includes(element,fromIndex);
element: value of an array
----------------------------------------------------------------------
6.find()
------
        -it is used to return the first element of an array that
          satisfies a specific condition
        -it returns a single value i.e first result 
        -it introduced in es6
syntax

array.find((element,index,array)=>{
       return element;
})
index and array are optional
---------------------------------------------------------------
7.every()
------
        -it is used to check if all the elements of an array
          satisfy a specific condition
        -it returns a boolean value
        -it introduced in es6
syntax
array.every((element,index,array)=>{
       return element;
})
-------------------------------------------------------------------
       